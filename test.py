# -*- coding: utf-8 -*-
import Latin
def testpres():
	print Latin.conjugate("amare","amāvi","1","FST","SG","PRES")
	print Latin.conjugate("amare","amāvi","1","SND","SG","PRES")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","PRES")
	print Latin.conjugate("amare","amāvi","1","FST","PL","PRES")
	print Latin.conjugate("amare","amāvi","1","SND","PL","PRES")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","PRES")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","PRES")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","PRES")
	print Latin.conjugate("petere","petīvi","3","SND","SG","PRES")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","PRES")
	print Latin.conjugate("petere","petīvi","3","FST","PL","PRES")
	print Latin.conjugate("petere","petīvi","3","SND","PL","PRES")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","PRES")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","PRES")
	print Latin.conjugate("venire","vēni","4","SND","SG","PRES")
	print Latin.conjugate("venire","vēni","4","TRD","SG","PRES")
	print Latin.conjugate("venire","vēni","4","FST","PL","PRES")
	print Latin.conjugate("venire","vēni","4","SND","PL","PRES")
	print Latin.conjugate("venire","vēni","4","TRD","PL","PRES")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","PRES")
	print Latin.conjugate("capere","cēpi","5","SND","SG","PRES")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","PRES")
	print Latin.conjugate("capere","cēpi","5","FST","PL","PRES")
	print Latin.conjugate("capere","cēpi","5","SND","PL","PRES")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","PRES")

def testimpf():
	print Latin.conjugate("amare","amāvi","1","FST","SG","IMPF")
	print Latin.conjugate("amare","amāvi","1","SND","SG","IMPF")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","IMPF")
	print Latin.conjugate("amare","amāvi","1","FST","PL","IMPF")
	print Latin.conjugate("amare","amāvi","1","SND","PL","IMPF")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","IMPF")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","IMPF")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","IMPF")
	print Latin.conjugate("petere","petīvi","3","SND","SG","IMPF")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","IMPF")
	print Latin.conjugate("petere","petīvi","3","FST","PL","IMPF")
	print Latin.conjugate("petere","petīvi","3","SND","PL","IMPF")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","IMPF")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","IMPF")
	print Latin.conjugate("venire","vēni","4","SND","SG","IMPF")
	print Latin.conjugate("venire","vēni","4","TRD","SG","IMPF")
	print Latin.conjugate("venire","vēni","4","FST","PL","IMPF")
	print Latin.conjugate("venire","vēni","4","SND","PL","IMPF")
	print Latin.conjugate("venire","vēni","4","TRD","PL","IMPF")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","IMPF")
	print Latin.conjugate("capere","cēpi","5","SND","SG","IMPF")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","IMPF")
	print Latin.conjugate("capere","cēpi","5","FST","PL","IMPF")
	print Latin.conjugate("capere","cēpi","5","SND","PL","IMPF")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","IMPF")

def testfutr():
	print Latin.conjugate("amare","amāvi","1","FST","SG","FUTR")
	print Latin.conjugate("amare","amāvi","1","SND","SG","FUTR")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","FUTR")
	print Latin.conjugate("amare","amāvi","1","FST","PL","FUTR")
	print Latin.conjugate("amare","amāvi","1","SND","PL","FUTR")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","FUTR")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","FUTR")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","FUTR")
	print Latin.conjugate("petere","petīvi","3","SND","SG","FUTR")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","FUTR")
	print Latin.conjugate("petere","petīvi","3","FST","PL","FUTR")
	print Latin.conjugate("petere","petīvi","3","SND","PL","FUTR")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","FUTR")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","FUTR")
	print Latin.conjugate("venire","vēni","4","SND","SG","FUTR")
	print Latin.conjugate("venire","vēni","4","TRD","SG","FUTR")
	print Latin.conjugate("venire","vēni","4","FST","PL","FUTR")
	print Latin.conjugate("venire","vēni","4","SND","PL","FUTR")
	print Latin.conjugate("venire","vēni","4","TRD","PL","FUTR")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","FUTR")
	print Latin.conjugate("capere","cēpi","5","SND","SG","FUTR")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","FUTR")
	print Latin.conjugate("capere","cēpi","5","FST","PL","FUTR")
	print Latin.conjugate("capere","cēpi","5","SND","PL","FUTR")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","FUTR")

def testperf():
	print Latin.conjugate("amare","amāvi","1","FST","SG","PERF")
	print Latin.conjugate("amare","amāvi","1","SND","SG","PERF")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","PERF")
	print Latin.conjugate("amare","amāvi","1","FST","PL","PERF")
	print Latin.conjugate("amare","amāvi","1","SND","PL","PERF")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","PERF")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","PERF")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","PERF")
	print Latin.conjugate("petere","petīvi","3","SND","SG","PERF")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","PERF")
	print Latin.conjugate("petere","petīvi","3","FST","PL","PERF")
	print Latin.conjugate("petere","petīvi","3","SND","PL","PERF")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","PERF")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","PERF")
	print Latin.conjugate("venire","vēni","4","SND","SG","PERF")
	print Latin.conjugate("venire","vēni","4","TRD","SG","PERF")
	print Latin.conjugate("venire","vēni","4","FST","PL","PERF")
	print Latin.conjugate("venire","vēni","4","SND","PL","PERF")
	print Latin.conjugate("venire","vēni","4","TRD","PL","PERF")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","PERF")
	print Latin.conjugate("capere","cēpi","5","SND","SG","PERF")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","PERF")
	print Latin.conjugate("capere","cēpi","5","FST","PL","PERF")
	print Latin.conjugate("capere","cēpi","5","SND","PL","PERF")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","PERF")

def testplup():
	print Latin.conjugate("amare","amāvi","1","FST","SG","PLUP")
	print Latin.conjugate("amare","amāvi","1","SND","SG","PLUP")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","PLUP")
	print Latin.conjugate("amare","amāvi","1","FST","PL","PLUP")
	print Latin.conjugate("amare","amāvi","1","SND","PL","PLUP")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","PLUP")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","PLUP")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","PLUP")
	print Latin.conjugate("petere","petīvi","3","SND","SG","PLUP")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","PLUP")
	print Latin.conjugate("petere","petīvi","3","FST","PL","PLUP")
	print Latin.conjugate("petere","petīvi","3","SND","PL","PLUP")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","PLUP")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","PLUP")
	print Latin.conjugate("venire","vēni","4","SND","SG","PLUP")
	print Latin.conjugate("venire","vēni","4","TRD","SG","PLUP")
	print Latin.conjugate("venire","vēni","4","FST","PL","PLUP")
	print Latin.conjugate("venire","vēni","4","SND","PL","PLUP")
	print Latin.conjugate("venire","vēni","4","TRD","PL","PLUP")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","PLUP")
	print Latin.conjugate("capere","cēpi","5","SND","SG","PLUP")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","PLUP")
	print Latin.conjugate("capere","cēpi","5","FST","PL","PLUP")
	print Latin.conjugate("capere","cēpi","5","SND","PL","PLUP")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","PLUP")

def testfutp():
	print Latin.conjugate("amare","amāvi","1","FST","SG","FUTP")
	print Latin.conjugate("amare","amāvi","1","SND","SG","FUTP")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","FUTP")
	print Latin.conjugate("amare","amāvi","1","FST","PL","FUTP")
	print Latin.conjugate("amare","amāvi","1","SND","PL","FUTP")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","FUTP")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","FUTP")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","FUTP")
	print Latin.conjugate("petere","petīvi","3","SND","SG","FUTP")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","FUTP")
	print Latin.conjugate("petere","petīvi","3","FST","PL","FUTP")
	print Latin.conjugate("petere","petīvi","3","SND","PL","FUTP")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","FUTP")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","FUTP")
	print Latin.conjugate("venire","vēni","4","SND","SG","FUTP")
	print Latin.conjugate("venire","vēni","4","TRD","SG","FUTP")
	print Latin.conjugate("venire","vēni","4","FST","PL","FUTP")
	print Latin.conjugate("venire","vēni","4","SND","PL","FUTP")
	print Latin.conjugate("venire","vēni","4","TRD","PL","FUTP")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","FUTP")
	print Latin.conjugate("capere","cēpi","5","SND","SG","FUTP")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","FUTP")
	print Latin.conjugate("capere","cēpi","5","FST","PL","FUTP")
	print Latin.conjugate("capere","cēpi","5","SND","PL","FUTP")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","FUTP")

def testrev3P():
	print Latin.reverseConjugate("amant")
	print Latin.reverseConjugate("amabant")
	print Latin.reverseConjugate("amabunt")
	print Latin.reverseConjugate("amaverunt")
	print Latin.reverseConjugate("amaverant")
	print Latin.reverseConjugate("amaverint")

	print Latin.reverseConjugate("delent")
	print Latin.reverseConjugate("delebant")
	print Latin.reverseConjugate("delebunt")
	print Latin.reverseConjugate("deleverunt")
	print Latin.reverseConjugate("deleverant")
	print Latin.reverseConjugate("deleverint")

	print Latin.reverseConjugate("petunt")
	print Latin.reverseConjugate("petebant")
	print Latin.reverseConjugate("petent")
	print Latin.reverseConjugate("peteverunt")
	print Latin.reverseConjugate("peteverant")
	print Latin.reverseConjugate("peteverint")

	print Latin.reverseConjugate("veniunt")
	print Latin.reverseConjugate("veniebant")
	print Latin.reverseConjugate("venient")
	print Latin.reverseConjugate("venierunt")
	print Latin.reverseConjugate("venierant")
	print Latin.reverseConjugate("venierint")

	print Latin.reverseConjugate("capiunt")
	print Latin.reverseConjugate("capiebant")
	print Latin.reverseConjugate("capient")
	print Latin.reverseConjugate("ceperunt")
	print Latin.reverseConjugate("ceperant")
	print Latin.reverseConjugate("ceperint")

# if __name__ == "__main__": main()
testpres()
print("---------")
testimpf()
print("---------")
testfutr()
print("---------")
testperf()
print("---------")
testplup()
print("---------")
testfutp()

# testrev3P()