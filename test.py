# -*- coding: utf-8 -*-
import Latin
def testpres():
	print Latin.conjugate("amare","amāvi","1","FST","SG","PRES")
	print Latin.conjugate("amare","amāvi","1","SND","SG","PRES")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","PRES")
	print Latin.conjugate("amare","amāvi","1","FST","PL","PRES")
	print Latin.conjugate("amare","amāvi","1","SND","PL","PRES")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","PRES")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","PRES")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","PRES")
	print Latin.conjugate("petere","petīvi","3","SND","SG","PRES")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","PRES")
	print Latin.conjugate("petere","petīvi","3","FST","PL","PRES")
	print Latin.conjugate("petere","petīvi","3","SND","PL","PRES")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","PRES")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","PRES")
	print Latin.conjugate("venire","vēni","4","SND","SG","PRES")
	print Latin.conjugate("venire","vēni","4","TRD","SG","PRES")
	print Latin.conjugate("venire","vēni","4","FST","PL","PRES")
	print Latin.conjugate("venire","vēni","4","SND","PL","PRES")
	print Latin.conjugate("venire","vēni","4","TRD","PL","PRES")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","PRES")
	print Latin.conjugate("capere","cēpi","5","SND","SG","PRES")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","PRES")
	print Latin.conjugate("capere","cēpi","5","FST","PL","PRES")
	print Latin.conjugate("capere","cēpi","5","SND","PL","PRES")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","PRES")

def testimpf():
	print Latin.conjugate("amare","amāvi","1","FST","SG","IMPF")
	print Latin.conjugate("amare","amāvi","1","SND","SG","IMPF")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","IMPF")
	print Latin.conjugate("amare","amāvi","1","FST","PL","IMPF")
	print Latin.conjugate("amare","amāvi","1","SND","PL","IMPF")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","IMPF")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","IMPF")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","IMPF")
	print Latin.conjugate("petere","petīvi","3","SND","SG","IMPF")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","IMPF")
	print Latin.conjugate("petere","petīvi","3","FST","PL","IMPF")
	print Latin.conjugate("petere","petīvi","3","SND","PL","IMPF")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","IMPF")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","IMPF")
	print Latin.conjugate("venire","vēni","4","SND","SG","IMPF")
	print Latin.conjugate("venire","vēni","4","TRD","SG","IMPF")
	print Latin.conjugate("venire","vēni","4","FST","PL","IMPF")
	print Latin.conjugate("venire","vēni","4","SND","PL","IMPF")
	print Latin.conjugate("venire","vēni","4","TRD","PL","IMPF")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","IMPF")
	print Latin.conjugate("capere","cēpi","5","SND","SG","IMPF")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","IMPF")
	print Latin.conjugate("capere","cēpi","5","FST","PL","IMPF")
	print Latin.conjugate("capere","cēpi","5","SND","PL","IMPF")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","IMPF")

def testfutr():
	print Latin.conjugate("amare","amāvi","1","FST","SG","FUTR")
	print Latin.conjugate("amare","amāvi","1","SND","SG","FUTR")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","FUTR")
	print Latin.conjugate("amare","amāvi","1","FST","PL","FUTR")
	print Latin.conjugate("amare","amāvi","1","SND","PL","FUTR")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","FUTR")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","FUTR")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","FUTR")
	print Latin.conjugate("petere","petīvi","3","SND","SG","FUTR")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","FUTR")
	print Latin.conjugate("petere","petīvi","3","FST","PL","FUTR")
	print Latin.conjugate("petere","petīvi","3","SND","PL","FUTR")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","FUTR")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","FUTR")
	print Latin.conjugate("venire","vēni","4","SND","SG","FUTR")
	print Latin.conjugate("venire","vēni","4","TRD","SG","FUTR")
	print Latin.conjugate("venire","vēni","4","FST","PL","FUTR")
	print Latin.conjugate("venire","vēni","4","SND","PL","FUTR")
	print Latin.conjugate("venire","vēni","4","TRD","PL","FUTR")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","FUTR")
	print Latin.conjugate("capere","cēpi","5","SND","SG","FUTR")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","FUTR")
	print Latin.conjugate("capere","cēpi","5","FST","PL","FUTR")
	print Latin.conjugate("capere","cēpi","5","SND","PL","FUTR")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","FUTR")

def testperf():
	print Latin.conjugate("amare","amāvi","1","FST","SG","PERF")
	print Latin.conjugate("amare","amāvi","1","SND","SG","PERF")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","PERF")
	print Latin.conjugate("amare","amāvi","1","FST","PL","PERF")
	print Latin.conjugate("amare","amāvi","1","SND","PL","PERF")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","PERF")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","PERF")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","PERF")
	print Latin.conjugate("petere","petīvi","3","SND","SG","PERF")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","PERF")
	print Latin.conjugate("petere","petīvi","3","FST","PL","PERF")
	print Latin.conjugate("petere","petīvi","3","SND","PL","PERF")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","PERF")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","PERF")
	print Latin.conjugate("venire","vēni","4","SND","SG","PERF")
	print Latin.conjugate("venire","vēni","4","TRD","SG","PERF")
	print Latin.conjugate("venire","vēni","4","FST","PL","PERF")
	print Latin.conjugate("venire","vēni","4","SND","PL","PERF")
	print Latin.conjugate("venire","vēni","4","TRD","PL","PERF")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","PERF")
	print Latin.conjugate("capere","cēpi","5","SND","SG","PERF")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","PERF")
	print Latin.conjugate("capere","cēpi","5","FST","PL","PERF")
	print Latin.conjugate("capere","cēpi","5","SND","PL","PERF")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","PERF")

def testplup():
	print Latin.conjugate("amare","amāvi","1","FST","SG","PLUP")
	print Latin.conjugate("amare","amāvi","1","SND","SG","PLUP")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","PLUP")
	print Latin.conjugate("amare","amāvi","1","FST","PL","PLUP")
	print Latin.conjugate("amare","amāvi","1","SND","PL","PLUP")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","PLUP")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","PLUP")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","PLUP")
	print Latin.conjugate("petere","petīvi","3","SND","SG","PLUP")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","PLUP")
	print Latin.conjugate("petere","petīvi","3","FST","PL","PLUP")
	print Latin.conjugate("petere","petīvi","3","SND","PL","PLUP")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","PLUP")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","PLUP")
	print Latin.conjugate("venire","vēni","4","SND","SG","PLUP")
	print Latin.conjugate("venire","vēni","4","TRD","SG","PLUP")
	print Latin.conjugate("venire","vēni","4","FST","PL","PLUP")
	print Latin.conjugate("venire","vēni","4","SND","PL","PLUP")
	print Latin.conjugate("venire","vēni","4","TRD","PL","PLUP")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","PLUP")
	print Latin.conjugate("capere","cēpi","5","SND","SG","PLUP")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","PLUP")
	print Latin.conjugate("capere","cēpi","5","FST","PL","PLUP")
	print Latin.conjugate("capere","cēpi","5","SND","PL","PLUP")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","PLUP")

def testfutp():
	print Latin.conjugate("amare","amāvi","1","FST","SG","FUTP")
	print Latin.conjugate("amare","amāvi","1","SND","SG","FUTP")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","FUTP")
	print Latin.conjugate("amare","amāvi","1","FST","PL","FUTP")
	print Latin.conjugate("amare","amāvi","1","SND","PL","FUTP")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","FUTP")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","FUTP")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","FUTP")
	print Latin.conjugate("petere","petīvi","3","SND","SG","FUTP")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","FUTP")
	print Latin.conjugate("petere","petīvi","3","FST","PL","FUTP")
	print Latin.conjugate("petere","petīvi","3","SND","PL","FUTP")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","FUTP")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","FUTP")
	print Latin.conjugate("venire","vēni","4","SND","SG","FUTP")
	print Latin.conjugate("venire","vēni","4","TRD","SG","FUTP")
	print Latin.conjugate("venire","vēni","4","FST","PL","FUTP")
	print Latin.conjugate("venire","vēni","4","SND","PL","FUTP")
	print Latin.conjugate("venire","vēni","4","TRD","PL","FUTP")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","FUTP")
	print Latin.conjugate("capere","cēpi","5","SND","SG","FUTP")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","FUTP")
	print Latin.conjugate("capere","cēpi","5","FST","PL","FUTP")
	print Latin.conjugate("capere","cēpi","5","SND","PL","FUTP")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","FUTP")

def testrev3P():
	print Latin.reverseConjugate("amant")
	print Latin.reverseConjugate("amabant")
	print Latin.reverseConjugate("amabunt")
	print Latin.reverseConjugate("amāverunt")
	print Latin.reverseConjugate("amāverant")
	print Latin.reverseConjugate("amāverint")

	print Latin.reverseConjugate("dēlent")
	print Latin.reverseConjugate("dēlēbant")
	print Latin.reverseConjugate("dēlēbunt")
	print Latin.reverseConjugate("dēlēverunt")
	print Latin.reverseConjugate("dēlēverant")
	print Latin.reverseConjugate("dēlēverint")

	print Latin.reverseConjugate("petunt")
	print Latin.reverseConjugate("petebant")
	print Latin.reverseConjugate("petent")
	print Latin.reverseConjugate("petīverunt")
	print Latin.reverseConjugate("petīverant")
	print Latin.reverseConjugate("petīverint")

	print Latin.reverseConjugate("veniunt")
	print Latin.reverseConjugate("veniebant")
	print Latin.reverseConjugate("venient")
	print Latin.reverseConjugate("vēnerunt")
	print Latin.reverseConjugate("vēnerant")
	print Latin.reverseConjugate("vēnerint")

	print Latin.reverseConjugate("capiunt")
	print Latin.reverseConjugate("capiebant")
	print Latin.reverseConjugate("capient")
	print Latin.reverseConjugate("cēperunt")
	print Latin.reverseConjugate("cēperant")
	print Latin.reverseConjugate("cēperint")

def testrev3S():
	print Latin.reverseConjugate("amat")
	print Latin.reverseConjugate("amabat")
	print Latin.reverseConjugate("amabit")
	print Latin.reverseConjugate("amāvit")
	print Latin.reverseConjugate("amāverat")
	print Latin.reverseConjugate("amāverit")

	print Latin.reverseConjugate("dēlet")
	print Latin.reverseConjugate("dēlēbat")
	print Latin.reverseConjugate("dēlēbit")
	print Latin.reverseConjugate("dēlēvit")
	print Latin.reverseConjugate("dēlēverat")
	print Latin.reverseConjugate("dēlēverit")

	print Latin.reverseConjugate("petit")
	print Latin.reverseConjugate("petebat")
	print Latin.reverseConjugate("petet")
	print Latin.reverseConjugate("petīvit")
	print Latin.reverseConjugate("petīverat")
	print Latin.reverseConjugate("petīverit")

	print Latin.reverseConjugate("venit")
	print Latin.reverseConjugate("veniebat")
	print Latin.reverseConjugate("veniet")
	print Latin.reverseConjugate("vēnit")
	print Latin.reverseConjugate("vēnerat")
	print Latin.reverseConjugate("vēnerit")

	print Latin.reverseConjugate("capit")
	print Latin.reverseConjugate("capiebat")
	print Latin.reverseConjugate("capiet")
	print Latin.reverseConjugate("cēpit")
	print Latin.reverseConjugate("cēperat")
	print Latin.reverseConjugate("cēperit")

def testrev2P():
	print Latin.reverseConjugate("amatis")
	print Latin.reverseConjugate("amabatis")
	print Latin.reverseConjugate("amabitis")
	print Latin.reverseConjugate("amāvistis")
	print Latin.reverseConjugate("amāveratis")
	print Latin.reverseConjugate("amāveritis")

	print Latin.reverseConjugate("dēletis")
	print Latin.reverseConjugate("dēlēbatis")
	print Latin.reverseConjugate("dēlēbitis")
	print Latin.reverseConjugate("dēlēvistis")
	print Latin.reverseConjugate("dēlēveratis")
	print Latin.reverseConjugate("dēlēveritis")

	print Latin.reverseConjugate("petitis")
	print Latin.reverseConjugate("petebatis")
	print Latin.reverseConjugate("petetis")
	print Latin.reverseConjugate("petīvistis")
	print Latin.reverseConjugate("petīveratis")
	print Latin.reverseConjugate("petīveritis")

	print Latin.reverseConjugate("venitis")
	print Latin.reverseConjugate("veniebatis")
	print Latin.reverseConjugate("venietis")
	print Latin.reverseConjugate("vēnistis")
	print Latin.reverseConjugate("vēneratis")
	print Latin.reverseConjugate("vēneritis")

	print Latin.reverseConjugate("capitis")
	print Latin.reverseConjugate("capiebatis")
	print Latin.reverseConjugate("capietis")
	print Latin.reverseConjugate("cēpistis")
	print Latin.reverseConjugate("cēperatis")
	print Latin.reverseConjugate("cēperitis")


# if __name__ == "__main__": main()
# testpres()
# print("---------")
# testimpf()
# print("---------")
# testfutr()
# print("---------")
# testperf()
# print("---------")
# testplup()
# print("---------")
# testfutp()

# testrev3P()
# print("---------")
# testrev3S()
# print("---------")
testrev2P()