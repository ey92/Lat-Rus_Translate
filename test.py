# -*- coding: utf-8 -*-
import Latin
def testpres():
	print Latin.conjugate("amare","amāvi","1","FST","SG","PRES")
	print Latin.conjugate("amare","amāvi","1","SND","SG","PRES")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","PRES")
	print Latin.conjugate("amare","amāvi","1","FST","PL","PRES")
	print Latin.conjugate("amare","amāvi","1","SND","PL","PRES")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","PRES")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","PRES")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","PRES")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","PRES")
	print Latin.conjugate("petere","petīvi","3","SND","SG","PRES")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","PRES")
	print Latin.conjugate("petere","petīvi","3","FST","PL","PRES")
	print Latin.conjugate("petere","petīvi","3","SND","PL","PRES")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","PRES")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","PRES")
	print Latin.conjugate("venire","vēni","4","SND","SG","PRES")
	print Latin.conjugate("venire","vēni","4","TRD","SG","PRES")
	print Latin.conjugate("venire","vēni","4","FST","PL","PRES")
	print Latin.conjugate("venire","vēni","4","SND","PL","PRES")
	print Latin.conjugate("venire","vēni","4","TRD","PL","PRES")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","PRES")
	print Latin.conjugate("capere","cēpi","5","SND","SG","PRES")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","PRES")
	print Latin.conjugate("capere","cēpi","5","FST","PL","PRES")
	print Latin.conjugate("capere","cēpi","5","SND","PL","PRES")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","PRES")

def testimpf():
	print Latin.conjugate("amare","amāvi","1","FST","SG","IMPF")
	print Latin.conjugate("amare","amāvi","1","SND","SG","IMPF")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","IMPF")
	print Latin.conjugate("amare","amāvi","1","FST","PL","IMPF")
	print Latin.conjugate("amare","amāvi","1","SND","PL","IMPF")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","IMPF")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","IMPF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","IMPF")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","IMPF")
	print Latin.conjugate("petere","petīvi","3","SND","SG","IMPF")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","IMPF")
	print Latin.conjugate("petere","petīvi","3","FST","PL","IMPF")
	print Latin.conjugate("petere","petīvi","3","SND","PL","IMPF")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","IMPF")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","IMPF")
	print Latin.conjugate("venire","vēni","4","SND","SG","IMPF")
	print Latin.conjugate("venire","vēni","4","TRD","SG","IMPF")
	print Latin.conjugate("venire","vēni","4","FST","PL","IMPF")
	print Latin.conjugate("venire","vēni","4","SND","PL","IMPF")
	print Latin.conjugate("venire","vēni","4","TRD","PL","IMPF")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","IMPF")
	print Latin.conjugate("capere","cēpi","5","SND","SG","IMPF")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","IMPF")
	print Latin.conjugate("capere","cēpi","5","FST","PL","IMPF")
	print Latin.conjugate("capere","cēpi","5","SND","PL","IMPF")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","IMPF")

def testfutr():
	print Latin.conjugate("amare","amāvi","1","FST","SG","FUTR")
	print Latin.conjugate("amare","amāvi","1","SND","SG","FUTR")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","FUTR")
	print Latin.conjugate("amare","amāvi","1","FST","PL","FUTR")
	print Latin.conjugate("amare","amāvi","1","SND","PL","FUTR")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","FUTR")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","FUTR")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","FUTR")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","FUTR")
	print Latin.conjugate("petere","petīvi","3","SND","SG","FUTR")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","FUTR")
	print Latin.conjugate("petere","petīvi","3","FST","PL","FUTR")
	print Latin.conjugate("petere","petīvi","3","SND","PL","FUTR")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","FUTR")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","FUTR")
	print Latin.conjugate("venire","vēni","4","SND","SG","FUTR")
	print Latin.conjugate("venire","vēni","4","TRD","SG","FUTR")
	print Latin.conjugate("venire","vēni","4","FST","PL","FUTR")
	print Latin.conjugate("venire","vēni","4","SND","PL","FUTR")
	print Latin.conjugate("venire","vēni","4","TRD","PL","FUTR")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","FUTR")
	print Latin.conjugate("capere","cēpi","5","SND","SG","FUTR")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","FUTR")
	print Latin.conjugate("capere","cēpi","5","FST","PL","FUTR")
	print Latin.conjugate("capere","cēpi","5","SND","PL","FUTR")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","FUTR")

def testperf():
	print Latin.conjugate("amare","amāvi","1","FST","SG","PERF")
	print Latin.conjugate("amare","amāvi","1","SND","SG","PERF")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","PERF")
	print Latin.conjugate("amare","amāvi","1","FST","PL","PERF")
	print Latin.conjugate("amare","amāvi","1","SND","PL","PERF")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","PERF")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","PERF")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","PERF")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","PERF")
	print Latin.conjugate("petere","petīvi","3","SND","SG","PERF")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","PERF")
	print Latin.conjugate("petere","petīvi","3","FST","PL","PERF")
	print Latin.conjugate("petere","petīvi","3","SND","PL","PERF")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","PERF")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","PERF")
	print Latin.conjugate("venire","vēni","4","SND","SG","PERF")
	print Latin.conjugate("venire","vēni","4","TRD","SG","PERF")
	print Latin.conjugate("venire","vēni","4","FST","PL","PERF")
	print Latin.conjugate("venire","vēni","4","SND","PL","PERF")
	print Latin.conjugate("venire","vēni","4","TRD","PL","PERF")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","PERF")
	print Latin.conjugate("capere","cēpi","5","SND","SG","PERF")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","PERF")
	print Latin.conjugate("capere","cēpi","5","FST","PL","PERF")
	print Latin.conjugate("capere","cēpi","5","SND","PL","PERF")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","PERF")

def testplup():
	print Latin.conjugate("amare","amāvi","1","FST","SG","PLUP")
	print Latin.conjugate("amare","amāvi","1","SND","SG","PLUP")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","PLUP")
	print Latin.conjugate("amare","amāvi","1","FST","PL","PLUP")
	print Latin.conjugate("amare","amāvi","1","SND","PL","PLUP")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","PLUP")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","PLUP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","PLUP")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","PLUP")
	print Latin.conjugate("petere","petīvi","3","SND","SG","PLUP")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","PLUP")
	print Latin.conjugate("petere","petīvi","3","FST","PL","PLUP")
	print Latin.conjugate("petere","petīvi","3","SND","PL","PLUP")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","PLUP")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","PLUP")
	print Latin.conjugate("venire","vēni","4","SND","SG","PLUP")
	print Latin.conjugate("venire","vēni","4","TRD","SG","PLUP")
	print Latin.conjugate("venire","vēni","4","FST","PL","PLUP")
	print Latin.conjugate("venire","vēni","4","SND","PL","PLUP")
	print Latin.conjugate("venire","vēni","4","TRD","PL","PLUP")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","PLUP")
	print Latin.conjugate("capere","cēpi","5","SND","SG","PLUP")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","PLUP")
	print Latin.conjugate("capere","cēpi","5","FST","PL","PLUP")
	print Latin.conjugate("capere","cēpi","5","SND","PL","PLUP")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","PLUP")

def testfutp():
	print Latin.conjugate("amare","amāvi","1","FST","SG","FUTP")
	print Latin.conjugate("amare","amāvi","1","SND","SG","FUTP")
	print Latin.conjugate("amare","amāvi","1","TRD","SG","FUTP")
	print Latin.conjugate("amare","amāvi","1","FST","PL","FUTP")
	print Latin.conjugate("amare","amāvi","1","SND","PL","FUTP")
	print Latin.conjugate("amare","amāvi","1","TRD","PL","FUTP")
	print()
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","SG","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","SG","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","SG","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","FST","PL","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","SND","PL","FUTP")
	print Latin.conjugate("dēlēre","dēlēvi","2","TRD","PL","FUTP")
	print()
	print Latin.conjugate("petere","petīvi","3","FST","SG","FUTP")
	print Latin.conjugate("petere","petīvi","3","SND","SG","FUTP")
	print Latin.conjugate("petere","petīvi","3","TRD","SG","FUTP")
	print Latin.conjugate("petere","petīvi","3","FST","PL","FUTP")
	print Latin.conjugate("petere","petīvi","3","SND","PL","FUTP")
	print Latin.conjugate("petere","petīvi","3","TRD","PL","FUTP")
	print()
	print Latin.conjugate("venire","vēni","4","FST","SG","FUTP")
	print Latin.conjugate("venire","vēni","4","SND","SG","FUTP")
	print Latin.conjugate("venire","vēni","4","TRD","SG","FUTP")
	print Latin.conjugate("venire","vēni","4","FST","PL","FUTP")
	print Latin.conjugate("venire","vēni","4","SND","PL","FUTP")
	print Latin.conjugate("venire","vēni","4","TRD","PL","FUTP")
	print()
	print Latin.conjugate("capere","cēpi","5","FST","SG","FUTP")
	print Latin.conjugate("capere","cēpi","5","SND","SG","FUTP")
	print Latin.conjugate("capere","cēpi","5","TRD","SG","FUTP")
	print Latin.conjugate("capere","cēpi","5","FST","PL","FUTP")
	print Latin.conjugate("capere","cēpi","5","SND","PL","FUTP")
	print Latin.conjugate("capere","cēpi","5","TRD","PL","FUTP")

def testrev3P():
	print Latin.reverseConjugate("amant")
	print Latin.reverseConjugate("amabant")
	print Latin.reverseConjugate("amabunt")
	print Latin.reverseConjugate("amāverunt")
	print Latin.reverseConjugate("amāverant")
	print Latin.reverseConjugate("amāverint")

	print Latin.reverseConjugate("dēlent")
	print Latin.reverseConjugate("dēlēbant")
	print Latin.reverseConjugate("dēlēbunt")
	print Latin.reverseConjugate("dēlēverunt")
	print Latin.reverseConjugate("dēlēverant")
	print Latin.reverseConjugate("dēlēverint")

	print Latin.reverseConjugate("petunt")
	print Latin.reverseConjugate("petebant")
	print Latin.reverseConjugate("petent")
	print Latin.reverseConjugate("petīverunt")
	print Latin.reverseConjugate("petīverant")
	print Latin.reverseConjugate("petīverint")

	print Latin.reverseConjugate("veniunt")
	print Latin.reverseConjugate("veniebant")
	print Latin.reverseConjugate("venient")
	print Latin.reverseConjugate("vēnerunt")
	print Latin.reverseConjugate("vēnerant")
	print Latin.reverseConjugate("vēnerint")

	print Latin.reverseConjugate("capiunt")
	print Latin.reverseConjugate("capiebant")
	print Latin.reverseConjugate("capient")
	print Latin.reverseConjugate("cēperunt")
	print Latin.reverseConjugate("cēperant")
	print Latin.reverseConjugate("cēperint")

def testrev3S():
	print Latin.reverseConjugate("amat")
	print Latin.reverseConjugate("amabat")
	print Latin.reverseConjugate("amabit")
	print Latin.reverseConjugate("amāvit")
	print Latin.reverseConjugate("amāverat")
	print Latin.reverseConjugate("amāverit")

	print Latin.reverseConjugate("dēlet")
	print Latin.reverseConjugate("dēlēbat")
	print Latin.reverseConjugate("dēlēbit")
	print Latin.reverseConjugate("dēlēvit")
	print Latin.reverseConjugate("dēlēverat")
	print Latin.reverseConjugate("dēlēverit")

	print Latin.reverseConjugate("petit")
	print Latin.reverseConjugate("petebat")
	print Latin.reverseConjugate("petet")
	print Latin.reverseConjugate("petīvit")
	print Latin.reverseConjugate("petīverat")
	print Latin.reverseConjugate("petīverit")

	print Latin.reverseConjugate("venit")
	print Latin.reverseConjugate("veniebat")
	print Latin.reverseConjugate("veniet")
	print Latin.reverseConjugate("vēnit")
	print Latin.reverseConjugate("vēnerat")
	print Latin.reverseConjugate("vēnerit")

	print Latin.reverseConjugate("capit")
	print Latin.reverseConjugate("capiebat")
	print Latin.reverseConjugate("capiet")
	print Latin.reverseConjugate("cēpit")
	print Latin.reverseConjugate("cēperat")
	print Latin.reverseConjugate("cēperit")

def testrev2P():
	print Latin.reverseConjugate("amatis")
	print Latin.reverseConjugate("amabatis")
	print Latin.reverseConjugate("amabitis")
	print Latin.reverseConjugate("amāvistis")
	print Latin.reverseConjugate("amāveratis")
	print Latin.reverseConjugate("amāveritis")

	print Latin.reverseConjugate("dēletis")
	print Latin.reverseConjugate("dēlēbatis")
	print Latin.reverseConjugate("dēlēbitis")
	print Latin.reverseConjugate("dēlēvistis")
	print Latin.reverseConjugate("dēlēveratis")
	print Latin.reverseConjugate("dēlēveritis")

	print Latin.reverseConjugate("petitis")
	print Latin.reverseConjugate("petebatis")
	print Latin.reverseConjugate("petetis")
	print Latin.reverseConjugate("petīvistis")
	print Latin.reverseConjugate("petīveratis")
	print Latin.reverseConjugate("petīveritis")

	print Latin.reverseConjugate("venitis")
	print Latin.reverseConjugate("veniebatis")
	print Latin.reverseConjugate("venietis")
	print Latin.reverseConjugate("vēnistis")
	print Latin.reverseConjugate("vēneratis")
	print Latin.reverseConjugate("vēneritis")

	print Latin.reverseConjugate("capitis")
	print Latin.reverseConjugate("capiebatis")
	print Latin.reverseConjugate("capietis")
	print Latin.reverseConjugate("cēpistis")
	print Latin.reverseConjugate("cēperatis")
	print Latin.reverseConjugate("cēperitis")

def testrev2S():
	print Latin.reverseConjugate("amas")
	print Latin.reverseConjugate("amabas")
	print Latin.reverseConjugate("amabis")
	# print Latin.findTense2S("amāvisti",'SND','SG',False)
	print Latin.reverseConjugate("amāvisti")
	print Latin.reverseConjugate("amāveras")
	print Latin.reverseConjugate("amāveris")

	print Latin.reverseConjugate("dēles")
	print Latin.reverseConjugate("dēlēbas")
	print Latin.reverseConjugate("dēlēbis")
	print Latin.reverseConjugate("dēlēvisti")
	print Latin.reverseConjugate("dēlēveras")
	print Latin.reverseConjugate("dēlēveris")

	print Latin.reverseConjugate("petis")
	print Latin.reverseConjugate("petebas")
	print Latin.reverseConjugate("petes")
	print Latin.reverseConjugate("petīvisti")
	print Latin.reverseConjugate("petīveras")
	print Latin.reverseConjugate("petīveris")

	print Latin.reverseConjugate("venis")
	print Latin.reverseConjugate("veniebas")
	print Latin.reverseConjugate("venies")
	print Latin.reverseConjugate("vēnisti")
	print Latin.reverseConjugate("vēneras")
	print Latin.reverseConjugate("vēneris")

	print Latin.reverseConjugate("capis")
	print Latin.reverseConjugate("capiebas")
	print Latin.reverseConjugate("capies")
	print Latin.reverseConjugate("cēpisti")
	print Latin.reverseConjugate("cēperas")
	print Latin.reverseConjugate("cēperis")

def testrev1P():
	print Latin.reverseConjugate("amamus")
	print Latin.reverseConjugate("amabamus")
	print Latin.reverseConjugate("amabimus")
	print Latin.reverseConjugate("amāvimus")
	print Latin.reverseConjugate("amāveramus")
	print Latin.reverseConjugate("amāverimus")

	print Latin.reverseConjugate("dēlemus")
	print Latin.reverseConjugate("dēlēbamus")
	print Latin.reverseConjugate("dēlēbimus")
	print Latin.reverseConjugate("dēlēvimus")
	print Latin.reverseConjugate("dēlēveramus")
	print Latin.reverseConjugate("dēlēverimus")

	print Latin.reverseConjugate("petimus")
	print Latin.reverseConjugate("petebamus")
	print Latin.reverseConjugate("petemus")
	print Latin.reverseConjugate("petīvimus")
	print Latin.reverseConjugate("petīveramus")
	print Latin.reverseConjugate("petīverimus")

	print Latin.reverseConjugate("venimus")
	print Latin.reverseConjugate("veniebamus")
	print Latin.reverseConjugate("veniemus")
	print Latin.reverseConjugate("vēnimus")
	print Latin.reverseConjugate("vēneramus")
	print Latin.reverseConjugate("vēnerimus")

	print Latin.reverseConjugate("capimus")
	print Latin.reverseConjugate("capiebamus")
	print Latin.reverseConjugate("capiemus")
	print Latin.reverseConjugate("cēpimus")
	print Latin.reverseConjugate("cēperamus")
	print Latin.reverseConjugate("cēperimus")

def testrev1S():
	print Latin.reverseConjugate("amo")
	print Latin.reverseConjugate("amabam")
	print Latin.reverseConjugate("amabo")
	print Latin.reverseConjugate("amāvī")
	print Latin.reverseConjugate("amāveram")
	print Latin.reverseConjugate("amāvero")

	print Latin.reverseConjugate("dēleo")
	print Latin.reverseConjugate("dēlēbam")
	print Latin.reverseConjugate("dēlēbo")
	print Latin.reverseConjugate("dēlēvī")
	print Latin.reverseConjugate("dēlēveram")
	print Latin.reverseConjugate("dēlēvero")

	print Latin.reverseConjugate("peto")
	print Latin.reverseConjugate("petebam")
	print Latin.reverseConjugate("petam")
	print Latin.reverseConjugate("petīvī")
	print Latin.reverseConjugate("petīveram")
	print Latin.reverseConjugate("petīvero")

	print Latin.reverseConjugate("venio")
	print Latin.reverseConjugate("veniebam")
	print Latin.reverseConjugate("veniam")
	print Latin.reverseConjugate("vēnī")
	print Latin.reverseConjugate("vēneram")
	print Latin.reverseConjugate("vēnero")

	print Latin.reverseConjugate("capio")
	print Latin.reverseConjugate("capiebam")
	print Latin.reverseConjugate("capiam")
	print Latin.reverseConjugate("cēpī")
	print Latin.reverseConjugate("cēperam")
	print Latin.reverseConjugate("cēpero")

# if __name__ == "__main__": main()
# testpres()
# print("---------")
# testimpf()
# print("---------")
# testfutr()
# print("---------")
# testperf()
# print("---------")
# testplup()
# print("---------")
# testfutp()

# testrev3P()
# print("---------")
# testrev3S()
# print("---------")
# testrev2P()
# print("---------")
# testrev2S()
# print("---------")
# testrev1P()
# print("---------")
# testrev1S()

def test1D():
	print Latin.decline("puella","puellae","1","F","NOM","SG")
	print Latin.decline("puella","puellae","1","F","GEN","SG")
	print Latin.decline("puella","puellae","1","F","DAT","SG")
	print Latin.decline("puella","puellae","1","F","ACC","SG")
	print Latin.decline("puella","puellae","1","F","ABL","SG")
	print Latin.decline("puella","puellae","1","F","VOC","SG")
	print Latin.decline("puella","puellae","1","F","NOM","PL")
	print Latin.decline("puella","puellae","1","F","GEN","PL")
	print Latin.decline("puella","puellae","1","F","DAT","PL")
	print Latin.decline("puella","puellae","1","F","ACC","PL")
	print Latin.decline("puella","puellae","1","F","ABL","PL")
	print Latin.decline("puella","puellae","1","F","VOC","PL")
	print("---------")
	print Latin.decline("agricola","agricolae","1","M","NOM","SG")
	print Latin.decline("agricola","agricolae","1","M","GEN","SG")
	print Latin.decline("agricola","agricolae","1","M","DAT","SG")
	print Latin.decline("agricola","agricolae","1","M","ACC","SG")
	print Latin.decline("agricola","agricolae","1","M","ABL","SG")
	print Latin.decline("agricola","agricolae","1","M","VOC","SG")
	print Latin.decline("agricola","agricolae","1","M","NOM","PL")
	print Latin.decline("agricola","agricolae","1","M","GEN","PL")
	print Latin.decline("agricola","agricolae","1","M","DAT","PL")
	print Latin.decline("agricola","agricolae","1","M","ACC","PL")
	print Latin.decline("agricola","agricolae","1","M","ABL","PL")
	print Latin.decline("agricola","agricolae","1","M","VOC","PL")

def test2D():
	print Latin.decline("puer","puerī","2","M","NOM","SG")
	print Latin.decline("puer","puerī","2","M","GEN","SG")
	print Latin.decline("puer","puerī","2","M","DAT","SG")
	print Latin.decline("puer","puerī","2","M","ACC","SG")
	print Latin.decline("puer","puerī","2","M","ABL","SG")
	print Latin.decline("puer","puerī","2","M","VOC","SG")
	print Latin.decline("puer","puerī","2","M","NOM","PL")
	print Latin.decline("puer","puerī","2","M","GEN","PL")
	print Latin.decline("puer","puerī","2","M","DAT","PL")
	print Latin.decline("puer","puerī","2","M","ACC","PL")
	print Latin.decline("puer","puerī","2","M","ABL","PL")
	print Latin.decline("puer","puerī","2","M","VOC","PL")
	print("---------")
	print Latin.decline("filius","filiī","2","M","NOM","SG")
	print Latin.decline("filius","filiī","2","M","GEN","SG")
	print Latin.decline("filius","filiī","2","M","DAT","SG")
	print Latin.decline("filius","filiī","2","M","ACC","SG")
	print Latin.decline("filius","filiī","2","M","ABL","SG")
	print Latin.decline("filius","filiī","2","M","VOC","SG")
	print Latin.decline("filius","filiī","2","M","NOM","PL")
	print Latin.decline("filius","filiī","2","M","GEN","PL")
	print Latin.decline("filius","filiī","2","M","DAT","PL")
	print Latin.decline("filius","filiī","2","M","ACC","PL")
	print Latin.decline("filius","filiī","2","M","ABL","PL")
	print Latin.decline("filius","filiī","2","M","VOC","PL")
	print("---------")
	print Latin.decline("mūrus","mūrī","2","M","NOM","SG")
	print Latin.decline("mūrus","mūrī","2","M","GEN","SG")
	print Latin.decline("mūrus","mūrī","2","M","DAT","SG")
	print Latin.decline("mūrus","mūrī","2","M","ACC","SG")
	print Latin.decline("mūrus","mūrī","2","M","ABL","SG")
	print Latin.decline("mūrus","mūrī","2","M","VOC","SG")
	print Latin.decline("mūrus","mūrī","2","M","NOM","PL")
	print Latin.decline("mūrus","mūrī","2","M","GEN","PL")
	print Latin.decline("mūrus","mūrī","2","M","DAT","PL")
	print Latin.decline("mūrus","mūrī","2","M","ACC","PL")
	print Latin.decline("mūrus","mūrī","2","M","ABL","PL")
	print Latin.decline("mūrus","mūrī","2","M","VOC","PL")
	print("---------")
	print Latin.decline("bellum","bellī","2","N","NOM","SG")
	print Latin.decline("bellum","bellī","2","N","GEN","SG")
	print Latin.decline("bellum","bellī","2","N","DAT","SG")
	print Latin.decline("bellum","bellī","2","N","ACC","SG")
	print Latin.decline("bellum","bellī","2","N","ABL","SG")
	print Latin.decline("bellum","bellī","2","N","VOC","SG")
	print Latin.decline("bellum","bellī","2","N","NOM","PL")
	print Latin.decline("bellum","bellī","2","N","GEN","PL")
	print Latin.decline("bellum","bellī","2","N","DAT","PL")
	print Latin.decline("bellum","bellī","2","N","ACC","PL")
	print Latin.decline("bellum","bellī","2","N","ABL","PL")
	print Latin.decline("bellum","bellī","2","N","VOC","PL")

def test3D():
	print Latin.decline("homō","hominis","3  ","M","NOM","SG")
	print Latin.decline("homō","hominis","3  ","M","GEN","SG")
	print Latin.decline("homō","hominis","3  ","M","DAT","SG")
	print Latin.decline("homō","hominis","3  ","M","ACC","SG")
	print Latin.decline("homō","hominis","3  ","M","ABL","SG")
	print Latin.decline("homō","hominis","3  ","M","VOC","SG")
	print Latin.decline("homō","hominis","3  ","M","NOM","PL")
	print Latin.decline("homō","hominis","3  ","M","GEN","PL")
	print Latin.decline("homō","hominis","3  ","M","DAT","PL")
	print Latin.decline("homō","hominis","3  ","M","ACC","PL")
	print Latin.decline("homō","hominis","3  ","M","ABL","PL")
	print Latin.decline("homō","hominis","3  ","M","VOC","PL")
	print("---------")
	print Latin.decline("flūmen","flūminis","3  ","N","NOM","SG")
	print Latin.decline("flūmen","flūminis","3  ","N","GEN","SG")
	print Latin.decline("flūmen","flūminis","3  ","N","DAT","SG")
	print Latin.decline("flūmen","flūminis","3  ","N","ACC","SG")
	print Latin.decline("flūmen","flūminis","3  ","N","ABL","SG")
	print Latin.decline("flūmen","flūminis","3  ","N","VOC","SG")
	print Latin.decline("flūmen","flūminis","3  ","N","NOM","PL")
	print Latin.decline("flūmen","flūminis","3  ","N","GEN","PL")
	print Latin.decline("flūmen","flūminis","3  ","N","DAT","PL")
	print Latin.decline("flūmen","flūminis","3  ","N","ACC","PL")
	print Latin.decline("flūmen","flūminis","3  ","N","ABL","PL")
	print Latin.decline("flūmen","flūminis","3  ","N","VOC","PL")
	print("---------")
	print Latin.decline("urbs","urbis","3i ","F","NOM","SG")
	print Latin.decline("urbs","urbis","3i ","F","GEN","SG")
	print Latin.decline("urbs","urbis","3i ","F","DAT","SG")
	print Latin.decline("urbs","urbis","3i ","F","ACC","SG")
	print Latin.decline("urbs","urbis","3i ","F","ABL","SG")
	print Latin.decline("urbs","urbis","3i ","F","VOC","SG")
	print Latin.decline("urbs","urbis","3i ","F","NOM","PL")
	print Latin.decline("urbs","urbis","3i ","F","GEN","PL")
	print Latin.decline("urbs","urbis","3i ","F","DAT","PL")
	print Latin.decline("urbs","urbis","3i ","F","ACC","PL")
	print Latin.decline("urbs","urbis","3i ","F","ABL","PL")
	print Latin.decline("urbs","urbis","3i ","F","VOC","PL")
	print("---------")
	print Latin.decline("mare","maris","3ii","N","NOM","SG")
	print Latin.decline("mare","maris","3ii","N","GEN","SG")
	print Latin.decline("mare","maris","3ii","N","DAT","SG")
	print Latin.decline("mare","maris","3ii","N","ACC","SG")
	print Latin.decline("mare","maris","3ii","N","ABL","SG")
	print Latin.decline("mare","maris","3ii","N","VOC","SG")
	print Latin.decline("mare","maris","3ii","N","NOM","PL")
	print Latin.decline("mare","maris","3ii","N","GEN","PL")
	print Latin.decline("mare","maris","3ii","N","DAT","PL")
	print Latin.decline("mare","maris","3ii","N","ACC","PL")
	print Latin.decline("mare","maris","3ii","N","ABL","PL")
	print Latin.decline("mare","maris","3ii","N","VOC","PL")

def test4D():
	print Latin.decline("manus","manūs","4","F","NOM","SG")
	print Latin.decline("manus","manūs","4","F","GEN","SG")
	print Latin.decline("manus","manūs","4","F","DAT","SG")
	print Latin.decline("manus","manūs","4","F","ACC","SG")
	print Latin.decline("manus","manūs","4","F","ABL","SG")
	print Latin.decline("manus","manūs","4","F","VOC","SG")
	print Latin.decline("manus","manūs","4","F","NOM","PL")
	print Latin.decline("manus","manūs","4","F","GEN","PL")
	print Latin.decline("manus","manūs","4","F","DAT","PL")
	print Latin.decline("manus","manūs","4","F","ACC","PL")
	print Latin.decline("manus","manūs","4","F","ABL","PL")
	print Latin.decline("manus","manūs","4","F","VOC","PL")
	print("---------")
	print Latin.decline("cornū","cornūs","4","N","NOM","SG")
	print Latin.decline("cornū","cornūs","4","N","GEN","SG")
	print Latin.decline("cornū","cornūs","4","N","DAT","SG")
	print Latin.decline("cornū","cornūs","4","N","ACC","SG")
	print Latin.decline("cornū","cornūs","4","N","ABL","SG")
	print Latin.decline("cornū","cornūs","4","N","VOC","SG")
	print Latin.decline("cornū","cornūs","4","N","NOM","PL")
	print Latin.decline("cornū","cornūs","4","N","GEN","PL")
	print Latin.decline("cornū","cornūs","4","N","DAT","PL")
	print Latin.decline("cornū","cornūs","4","N","ACC","PL")
	print Latin.decline("cornū","cornūs","4","N","ABL","PL")
	print Latin.decline("cornū","cornūs","4","N","VOC","PL")

def test5D():
	print Latin.decline("rēs","reī","5","F","NOM","SG")
	print Latin.decline("rēs","reī","5","F","GEN","SG")
	print Latin.decline("rēs","reī","5","F","DAT","SG")
	print Latin.decline("rēs","reī","5","F","ACC","SG")
	print Latin.decline("rēs","reī","5","F","ABL","SG")
	print Latin.decline("rēs","reī","5","F","VOC","SG")
	print Latin.decline("rēs","reī","5","F","NOM","PL")
	print Latin.decline("rēs","reī","5","F","GEN","PL")
	print Latin.decline("rēs","reī","5","F","DAT","PL")
	print Latin.decline("rēs","reī","5","F","ACC","PL")
	print Latin.decline("rēs","reī","5","F","ABL","PL")
	print Latin.decline("rēs","reī","5","F","VOC","PL")
	print("---------")
	print Latin.decline("diēs","diēī","5","N","NOM","SG")
	print Latin.decline("diēs","diēī","5","N","GEN","SG")
	print Latin.decline("diēs","diēī","5","N","DAT","SG")
	print Latin.decline("diēs","diēī","5","N","ACC","SG")
	print Latin.decline("diēs","diēī","5","N","ABL","SG")
	print Latin.decline("diēs","diēī","5","N","VOC","SG")
	print Latin.decline("diēs","diēī","5","N","NOM","PL")
	print Latin.decline("diēs","diēī","5","N","GEN","PL")
	print Latin.decline("diēs","diēī","5","N","DAT","PL")
	print Latin.decline("diēs","diēī","5","N","ACC","PL")
	print Latin.decline("diēs","diēī","5","N","ABL","PL")
	print Latin.decline("diēs","diēī","5","N","VOC","PL")

test1D()
# print("---------")
# test2D()
# print("---------")
# test3D()
# print("---------")
# test4D()
# print("---------")
# test5D()